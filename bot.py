from aiogram.utils import executor

from photo import *
from day_calendar import *
from support import *
from about import *
from map import *
from sammit import *
from admin import *


@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    date_now = datetime.datetime.now()
    if not session.query(User).filter(User.telegram_id == msg.from_user.id).first():
        name_list = []
        if msg.from_user.first_name:
            name_list.append(msg.from_user.first_name)
        if msg.from_user.last_name:
            name_list.append(msg.from_user.last_name)
        user_name = ' '.join(name_list)
        new_user = User(telegram_id=msg.from_user.id, name=user_name, date_start=date_now, date_active=date_now)
        session.add(new_user)
    else:
        session.query(User).filter(User.telegram_id == msg.from_user.id).update({'date_active': date_now}, synchronize_session='fetch')
    session.commit()
    mes = emojize(msg.from_user.first_name + ", –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>ipyforum_bot</b>! :waving_hand:")
    await send_message_try(msg.from_user.id, mes, kb_start)
    
    
@dp.message_handler(commands=['be_admin'])
async def be_admin(msg: types.Message):
    kb_add_admin = InlineKeyboardMarkup(row_width=2)
    kb_add_admin.insert(InlineKeyboardButton('–î–∞', callback_data=cb_add_admin.new(user_id=msg.from_user.id)))
    kb_add_admin.insert(InlineKeyboardButton('–ù–µ—Ç', callback_data='no_admin'))
    user = session.query(User).filter(User.telegram_id == msg.from_user.id).first()
    mes = emojize(f'<b>{user.name}</b> –∑–∞–ø—Ä–æ—Å–∏–ª(–∞) –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å?')
    for i in get_admins():
        await send_message_try(i.telegram_id, mes, kb_add_admin)
    mes = emojize('–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.')
    await send_message_try(msg.from_user.id, mes)
    
    
@dp.callback_query_handler(cb_add_admin.filter())
async def add_admin(call: types.CallbackQuery, callback_data: dict):
    admin = session.query(User).filter(User.telegram_id == call.from_user.id).first()
    user = session.query(User).filter(User.telegram_id == callback_data['user_id']).first()
    if get_user(callback_data['user_id']).admin:
        mes = '–ü—Ä–∞–≤–∞ —É–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã'
        await call.message.edit_text(mes)
    else:
        try:
            await call.message.delete()
        except:
            pass
        session.query(User).filter(User.telegram_id == callback_data['user_id']).update({'admin': True}, synchronize_session='fetch')
        session.commit()
        mes = emojize(f'<b>{admin.name}</b> –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª(–∞) –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <b>{user.name}</b>')
        for i in get_admins():
            await send_message_try(i.telegram_id, mes)
            
    
@dp.callback_query_handler(text='no_admin')
async def no_admin(call: types.CallbackQuery):
    await call.message.delete()


@dp.message_handler(text=emojize('–ß–∞—Ç :speech_balloon:'))
async def send_about(msg: types.Message):
    await send_message_try(msg.from_user.id, 'https://t.me/+bqE68NoGynI0MWIy\n–ü–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é '
                                             '–≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Ñ–æ—Ä—É–º–∞.', kb_start)


@dp.message_handler(text=emojize('–ú–µ—Å—Ç–æ üìç'))
async def send_location(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ —Å —Ç–µ–∫—Å—Ç–æ–º
    latitude = 54.912790 # –®–∏—Ä–æ—Ç–∞
    longitude = 52.318390 # –î–æ–ª–≥–æ—Ç–∞
    await bot.send_message(message.from_user.id, '–ü–ª–æ—â–∞–¥–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ñ–æ—Ä—É–º–∞ - –≥. –ê–ª—å–º–µ—Ç—å–µ–≤—Å–∫, –∫–∞–º–ø—É—Å –ê–ª—å–º–µ—Ç—å–µ–≤—Å–∫–æ–≥–æ '
                                                 '–≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ ¬´–í—ã—Å—à–∞—è —à–∫–æ–ª–∞ –Ω–µ—Ñ—Ç–∏¬ª', reply_markup=kb_start)
    await bot.send_location(message.from_user.id, latitude, longitude)


@dp.message_handler(text=emojize('–ó–∞–∫–∞–∑–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä üöå'))
async def get_transfer(msg: types.Message):
    await bot.send_message(msg.from_user.id, '–î–ª—è –∑–∞–∫–∞–∑–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–Ω–ª–∞–π–Ω-—Ñ–æ—Ä–º—É: https://oprostn.ru/~ligHf', reply_markup=kb_start)

@dp.message_handler(text=emojize('Wi-Fi üì°'))
async def get_wifi(msg: types.Message):
    await bot.send_message(msg.from_user.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç–∏:\nIPYForum-2024\n\n–ü–∞—Ä–æ–ª—å:\nR4a-8Tdx', reply_markup=kb_start)


@dp.callback_query_handler(text='cancel')
async def canceling(call: types.CallbackQuery):
    await call.message.delete()


async def shutdown(dispatcher: Dispatcher):
    await dispatcher.storage.close()
    await dispatcher.storage.wait_closed()


if __name__ == '__main__':
    executor.start_polling(dp, on_shutdown=shutdown)
